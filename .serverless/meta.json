{
  "/Users/juan/Documents/courses/aws/prod-serverless-ready/prod-ready-serverless-workshop/prsls-sls/serverless.yml": {
    "versionFramework": "4.17.2",
    "servicePath": "/Users/juan/Documents/courses/aws/prod-serverless-ready/prod-ready-serverless-workshop/prsls-sls/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "yeyop",
      "service": "prsls-sls-yeyo",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Scan"
                ],
                "Resource": {
                  "Fn::GetAtt": [
                    "RestaurantsTable",
                    "Arn"
                  ]
                }
              },
              {
                "Effect": "Allow",
                "Action": [
                  "execute-api:Invoke"
                ],
                "Resource": {
                  "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/dev/GET/restaurants"
                }
              }
            ]
          }
        },
        "environment": {
          "rest_api_url": {
            "Fn::Sub": "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev"
          }
        },
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true
      },
      "custom": {
        "export-env": {
          "overwrite": true
        }
      },
      "functions": {
        "get-index": {
          "handler": "functions/get-index.handler",
          "events": [
            {
              "http": {
                "path": "/",
                "method": "get"
              }
            }
          ],
          "environment": {
            "restaurants_api": {
              "Fn::Sub": "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/restaurants"
            },
            "cognito_user_pool_id": {
              "Ref": "CognitoUserPool"
            },
            "cognito_client_id": {
              "Ref": "WebCognitoUserPoolClient"
            },
            "cognito_server_client_id": {
              "Ref": "ServerCognitoUserPoolClient"
            }
          },
          "name": "prsls-sls-yeyo-dev-get-index"
        },
        "get-restaurants": {
          "handler": "functions/get-restaurants.handler",
          "events": [
            {
              "http": {
                "path": "/restaurants",
                "method": "get",
                "authorizer": "aws_iam"
              }
            }
          ],
          "environment": {
            "default_results": "10",
            "restaurants_table": {
              "Ref": "RestaurantsTable"
            }
          },
          "name": "prsls-sls-yeyo-dev-get-restaurants"
        },
        "search-restaurants": {
          "handler": "functions/search-restaurants.handler",
          "events": [
            {
              "http": {
                "path": "/restaurants/search",
                "method": "post",
                "authorizer": {
                  "name": "CognitoAuthorizer",
                  "type": "COGNITO_USER_POOLS",
                  "arn": {
                    "Fn::GetAtt": [
                      "CognitoUserPool",
                      "Arn"
                    ]
                  }
                }
              }
            }
          ],
          "environment": {
            "default_results": "8",
            "restaurants_table": {
              "Ref": "RestaurantsTable"
            }
          },
          "name": "prsls-sls-yeyo-dev-search-restaurants"
        }
      },
      "resources": {
        "Resources": {
          "RestaurantsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "name",
                  "KeyType": "HASH"
                }
              ],
              "AttributeDefinitions": [
                {
                  "AttributeName": "name",
                  "AttributeType": "S"
                }
              ]
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "prsls-sls-yeyo-dev",
              "AliasAttributes": [
                "email"
              ],
              "UsernameConfiguration": {
                "CaseSensitive": false
              },
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": "<REDACTED>"
              },
              "Schema": [
                {
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Name": "given_name",
                  "Required": true,
                  "StringAttributeConstraints": {
                    "MinLength": "1"
                  }
                },
                {
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Name": "family_name",
                  "Required": true,
                  "StringAttributeConstraints": {
                    "MinLength": "1"
                  }
                },
                {
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Name": "email",
                  "Required": true,
                  "StringAttributeConstraints": {
                    "MinLength": "1"
                  }
                }
              ]
            }
          },
          "WebCognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "web",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "ENABLED"
            }
          },
          "ServerCognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "server",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ALLOW_ADMIN_USER_PASSWORD_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "ENABLED"
            }
          }
        },
        "Outputs": {
          "RestaurantsTableName": {
            "Value": {
              "Ref": "RestaurantsTable"
            }
          },
          "CognitoUserPoolId": {
            "Value": {
              "Ref": "CognitoUserPool"
            }
          },
          "CognitoUserPoolArn": {
            "Value": {
              "Fn::GetAtt": [
                "CognitoUserPool",
                "Arn"
              ]
            }
          },
          "CognitoUserPoolWebClientId": {
            "Value": {
              "Ref": "WebCognitoUserPoolClient"
            }
          },
          "CognitoUserPoolServerClientId": {
            "Value": {
              "Ref": "ServerCognitoUserPoolClient"
            }
          }
        }
      },
      "plugins": [
        "serverless-export-env"
      ]
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Scan"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "RestaurantsTable",
                  "Arn"
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "execute-api:Invoke"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/dev/GET/restaurants"
              }
            }
          ]
        }
      },
      "environment": {
        "rest_api_url": {
          "Fn::Sub": "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev"
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: yeyop\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: prsls-sls-yeyo\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action: dynamodb:Scan\n          Resource: !GetAtt RestaurantsTable.Arn\n        - Effect: Allow\n          Action: execute-api:Invoke\n          Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/${sls:stage}/GET/restaurants\n  environment:\n    rest_api_url: !Sub https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${sls:stage}\n\n\ncustom:\n  export-env:\n    overwrite: true\n\nfunctions:\n  get-index:\n    handler: functions/get-index.handler\n    events:\n      - http:\n          path: /\n          method: get\n    environment:\n      # The Serverless framework ALWAYS uses the logical ID ApiGatewayRestApi for the API Gateway REST API resource it creates. \n      # So you can construct the URL for the /restaurants endpoint using the Fn::Sub CloudFormation pseudo function (or the !Sub shorthand) \n      # like this:\n      restaurants_api: !Sub https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${sls:stage}/restaurants\n      cognito_user_pool_id: !Ref CognitoUserPool\n      cognito_client_id: !Ref WebCognitoUserPoolClient\n      cognito_server_client_id: !Ref ServerCognitoUserPoolClient\n\n\n  get-restaurants:\n    handler: functions/get-restaurants.handler\n    events:\n      - http:\n          path: /restaurants\n          method: get\n          authorizer: aws_iam\n    environment:\n      default_results: 10\n      restaurants_table: !Ref RestaurantsTable\n\n  search-restaurants:\n    handler: functions/search-restaurants.handler\n    events:\n      - http:\n          path: /restaurants/search\n          method: post\n          authorizer:\n            name: CognitoAuthorizer\n            type: COGNITO_USER_POOLS\n            arn: !GetAtt CognitoUserPool.Arn\n    environment:\n      default_results: 8\n      restaurants_table: !Ref RestaurantsTable\n\n\nresources:\n  Resources:\n    RestaurantsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        BillingMode: PAY_PER_REQUEST\n        KeySchema:\n          - AttributeName: name\n            KeyType: HASH\n        AttributeDefinitions:\n          - AttributeName: name\n            AttributeType: S\n    CognitoUserPool:\n      Type: AWS::Cognito::UserPool\n      Properties:\n        UserPoolName: ${self:service}-${sls:stage}\n        # Allow users to log in with their email addresses.\n        # Verify that a user owns his/her email address (ie. by sending a verification code to the email)\n        # Allow usernames to be case insensitive\n        AliasAttributes:\n          - email\n        UsernameConfiguration:\n          CaseSensitive: false\n        AutoVerifiedAttributes:\n          - email\n        Policies:\n          PasswordPolicy:\n            MinimumLength: 8\n            RequireLowercase: true\n            RequireNumbers: true\n            RequireUppercase: true\n            RequireSymbols: true\n        Schema:\n          - AttributeDataType: String\n            Mutable: true\n            Name: given_name\n            Required: true\n            StringAttributeConstraints:\n              MinLength: \"1\"\n          - AttributeDataType: String\n            Mutable: true\n            Name: family_name\n            Required: true\n            StringAttributeConstraints:\n              MinLength: \"1\"\n          - AttributeDataType: String\n            Mutable: true\n            Name: email\n            Required: true\n            StringAttributeConstraints:\n              MinLength: \"1\"\n    WebCognitoUserPoolClient:\n      Type: AWS::Cognito::UserPoolClient\n      Properties:\n        ClientName: web\n        UserPoolId: !Ref CognitoUserPool\n        ExplicitAuthFlows:\n          - ALLOW_USER_SRP_AUTH\n          - ALLOW_REFRESH_TOKEN_AUTH\n        PreventUserExistenceErrors: ENABLED\n    ServerCognitoUserPoolClient:\n      Type: AWS::Cognito::UserPoolClient\n      Properties:\n        ClientName: server\n        UserPoolId: !Ref CognitoUserPool\n        ExplicitAuthFlows:\n          - ALLOW_ADMIN_USER_PASSWORD_AUTH\n          - ALLOW_REFRESH_TOKEN_AUTH\n        PreventUserExistenceErrors: ENABLED\n\n  Outputs:\n    RestaurantsTableName:\n      Value: !Ref RestaurantsTable\n\n    CognitoUserPoolId:\n      Value: !Ref CognitoUserPool\n\n    CognitoUserPoolArn:\n      Value: !GetAtt CognitoUserPool.Arn\n\n    CognitoUserPoolWebClientId:\n      Value: !Ref WebCognitoUserPoolClient\n\n    CognitoUserPoolServerClientId:\n      Value: !Ref ServerCognitoUserPoolClient\n\n\nplugins:\n  - serverless-export-env",
    "command": [
      "export-env"
    ],
    "options": {
      "all": true
    },
    "orgId": "f4700a80-40c3-4f59-83d9-940b2d490e95",
    "orgName": "yeyop",
    "userId": "6kBsV02rJNKdRZK9mL",
    "userName": "yeyop",
    "serviceProviderAwsAccountId": "364652780321",
    "serviceProviderAwsCfStackName": "prsls-sls-yeyo-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:364652780321:stack/prsls-sls-yeyo-dev/1c434a20-6836-11f0-95de-0affe32ffe85",
    "serviceProviderAwsCfStackCreated": "2025-07-24T02:30:06.135Z",
    "serviceProviderAwsCfStackUpdated": "2025-07-27T05:01:58.800Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetDashrestaurantsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:364652780321:function:prsls-sls-yeyo-dev-get-restaurants:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prsls-sls-yeyo-dev-GetDashrestaurantsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RestaurantsTableName",
        "OutputValue": "prsls-sls-yeyo-dev-RestaurantsTable-1H2873I99PGSL"
      },
      {
        "OutputKey": "CognitoUserPoolId",
        "OutputValue": "us-east-1_RinxzToSc"
      },
      {
        "OutputKey": "CognitoUserPoolServerClientId",
        "OutputValue": "175njgk23b6qvon2etiu5o4bee"
      },
      {
        "OutputKey": "CognitoUserPoolArn",
        "OutputValue": "arn:aws:cognito-idp:us-east-1:364652780321:userpool/us-east-1_RinxzToSc"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://ruolyz4m3e.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-prsls-sls-yeyo-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-2aa7f5b6-daed",
        "ExportName": "sls-prsls-sls-yeyo-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "GetDashindexLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:364652780321:function:prsls-sls-yeyo-dev-get-index:21",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prsls-sls-yeyo-dev-GetDashindexLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SearchDashrestaurantsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:364652780321:function:prsls-sls-yeyo-dev-search-restaurants:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prsls-sls-yeyo-dev-SearchDashrestaurantsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CognitoUserPoolWebClientId",
        "OutputValue": "4apa81aldaf5m9b47lfvomjs15"
      }
    ]
  }
}